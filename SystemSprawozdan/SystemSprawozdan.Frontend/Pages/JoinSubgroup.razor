@page "/join-subgroup/{groupId}"

@inject IAppHttpClient AppHttpClient
@inject IMatToaster Toaster
@inject NavigationManager NavigationManager

<PageTitle>Dołącz do grupy</PageTitle>

<style>
    .edit-field{
        display:flex;
        justify-content:center;
        align-items:center;
        width: 80%;
        
    }

</style>

<div class="block">
    <div class="block-left">
        <h4>Dane zespołu: </h4>
        <p><b>Przedmiot:</b> @groupSubjectName</p>
        <p><b>Rodzaj:</b> @groupType</p>
        <p><b>Grupa:</b> @groupName</p>
        <p><b>Prowadzący:</b> @groupTeacher</p>
    </div>

    <div class="block-right">
        <p>Wybierz sposób w jaki chcesz się zapisać do zespołu: @groupId </p>
        <p>   
            <MatRadioGroup @bind-Value="@subgroupType" TValue="string" Style="align-self:center;">
                <MatRadioButton Value="@("individual")" Label="Indywidualnie" TValue="string"></MatRadioButton>
                <MatRadioButton Value="@("group")" Label="Grupowo" TValue="string"></MatRadioButton>
            </MatRadioGroup>
        </p>

        
        <div id="@subgroupType" class="block-right">
            <p>Wybierz grupę roboczą: </p>
            <p>
                <MatSelectItem Label="Grupa" class="edit-field" @bind-Value="subgroupSelect" Items="@subgroupSelectItems"></MatSelectItem>
            </p>
            <br />
            <p>Jeżeli twojej grupy nie ma na liście wpisz ją poniżej: @subgroupName</p>
            <p>
                <MatStringField class="edit-field" @bind-Value="@subgroupName" Label="Nazwa grupy"></MatStringField>
                <ValidationMessage For="@(() => subgroupName)" style="font-size:12px;" />
            </p>

        </div>
        <MatButton OnClick="joinSubgroup" Style="height: 80px; width:120%; margin:60px; font-size: var(--font-size-large);" Raised="true">Zapisz się na zajęcia</MatButton>
        
    </div>
</div>
@code {
    protected override async Task OnInitializedAsync()
    {
        subgroupSelectItems.Add("");
        int intGroupId = Int32.Parse(groupId);
        var groups = await AppHttpClient.Get<List<SubjectSubgroupGetDto>>("SubjectSubgroup/" + intGroupId + "/GetSubgroups");
        foreach (var group in groups)
        {
            subgroupSelectItems.Add(group.Name);
        }
    }
    public async void joinSubgroup()
    {
        int intGroupId = Int32.Parse(groupId);
        if(subgroupType == "individual")
        {
            var subgroup = new SubjectSubgroupPostDto
                {
                    SubjectGroupId = intGroupId,
                    isIndividual = true,
                    SubgroupName = null
                };
            await AppHttpClient.Post("SubjectSubgroup", subgroup);
            Toaster.Add("Poprawnie stworzono grupę", MatToastType.Success, "Sukces", "", config => { });
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            if((subgroupName == null || subgroupName == "") && (subgroupSelect == "" || subgroupSelect == null))
            {
                Toaster.Add("Podaj nazwe grupy", MatToastType.Danger, "Błąd", "", config =>{});
                return;
            }
            else if(subgroupSelect == "" || subgroupSelect == null)
            {
                var subgroup = new SubjectSubgroupPostDto
                    {
                        SubjectGroupId = intGroupId,
                        isIndividual = false, 
                        SubgroupName = subgroupName
                    };
                await AppHttpClient.Post("SubjectSubgroup", subgroup);
                Toaster.Add("Poprawnie stworzono grupę", MatToastType.Success, "Sukces", "", config => { });
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                var groups = await AppHttpClient.Get<List<SubjectSubgroupGetDto>>("SubjectSubgroup/" + intGroupId + "/GetSubgroups");
                var subgroup = groups.FirstOrDefault(group => group.Name == subgroupSelect);
                int subgroupId = subgroup.Id;

                await AppHttpClient.Post("SubjectSubgroup/AddUserToSubgroup", subgroupId);
                Toaster.Add("Poprawnie dołączono do grupy", MatToastType.Success, "Sukces", "", config => { });
                NavigationManager.NavigateTo("/login");
            }
        }
    }
    [Parameter]
    public string groupId { get; set; }
    string groupSubjectName = "Bazy danych",
           groupType = "Laboratorium",
           groupName = "L05",
           groupTeacher = "mgr inż. Piotr Woźniak";
    string subgroupType = "individual";
    string? subgroupName;
    string subgroupSelect = "";
    public List<string> subgroupSelectItems = new List<string>();
}
