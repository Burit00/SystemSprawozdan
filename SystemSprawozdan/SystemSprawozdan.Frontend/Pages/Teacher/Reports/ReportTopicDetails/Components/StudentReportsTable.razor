<MatTable 
    TableItem="StudentReportGetDto"
    Items="@StudentReports" 
    ShowPaging="false" 
    OnRowDbClick="(studentReport) => HandleSelectedStudentReport((StudentReportGetDto)studentReport)"
    HeaderRowClass=""
>
    <MatTableHeader>
        @if (IsIndividualReports)
        {
            <th class="header-cell">Nr albumu</th>
            <th class="header-cell">Imię</th>
            <th class="header-cell">Nazwisko</th>
        }
        else
        {
            <th class="header-cell--wider">Nazwa grupy</th>
        }
        <th class="header-cell">Ocena</th>
        <th></th>
    </MatTableHeader>
    <MatTableRow>
        @if (IsIndividualReports)
        {
            <td>@context.SubjectSubgroup.Students.First().Login</td>
            <td>@context.SubjectSubgroup.Students.First().Name</td>
            <td>@context.SubjectSubgroup.Students.First().Surname</td>
        }
        else
        {
            <td>@context.SubjectSubgroup.Name</td>
        }
        <td>@(context.Mark is not null ? @EnumTranslations.Mark[context.Mark] : "") </td>
        <td><MatIcon Icon="@MatIconNames.Arrow_forward" Class="pointer" @onclick="() => HandleSelectedStudentReport(context)"/></td>
    </MatTableRow>
</MatTable>
@if (StudentReports.Count == 0)
{
    <LoadingBar IsLoading="true"/>
}

@code {

    [Parameter]
    public List<StudentReportGetDto> StudentReports { get; set; } = new();

    [Parameter]
    public bool IsIndividualReports { get; set; } = true;
    
    [Parameter]
    public EventCallback<int> SelectedStudentReportId { get; set; }

    public void HandleSelectedStudentReport(StudentReportGetDto studentReport)
    {
        SelectedStudentReportId.InvokeAsync(studentReport.Id);
    }
}