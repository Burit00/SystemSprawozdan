@page "/register"
@inject IAuthService AuthService
@inject IMatToaster toast
@using System.ComponentModel.DataAnnotations

<EditForm Style="height: 100%; width: 100%; display: flex;flex: 1 1 0;flex-direction: column;" Model="frontendRegister" OnValidSubmit="TryRegister">
    <ObjectGraphDataAnnotationsValidator />
    <div class="form-block">
        <div class="form-block-left">
            <p>
                <MatTextField Style="width: 100%;" @bind-Value="@frontendRegister.User.Email" Label="Email" Outlined="true"></MatTextField>
                <ValidationMessage For="@(() => frontendRegister.User.Email)" style="font-size:12px;" />
            </p>
            <p>
                <MatTextField Style="width: 100%;" @bind-Value="@frontendRegister.User.Name" Label="Imię" Outlined="true"></MatTextField>
                <ValidationMessage For="@(() => frontendRegister.User.Name)" style="font-size:12px;" />
            </p>
            <p>
                <MatTextField Style="width: 100%;" @bind-Value="@frontendRegister.User.Surname" Label="Nazwisko" Outlined="true"></MatTextField>
                <ValidationMessage For="@(() => frontendRegister.User.Surname)" style="font-size:12px;" />
            </p>
        </div>
        <div class="form-block-right">
            <p>
                <MatTextField Style="width: 100%;" @bind-Value="@frontendRegister.User.Login" Label="Login (nr albumu)" Outlined="true"></MatTextField>
                <ValidationMessage For="@(() => frontendRegister.User.Login)" style="font-size:12px;" />
            </p>
            <p>
                <MatTextField Style="width: 100%;" @bind-Value="@frontendRegister.User.Password" Label="Haslo" Type="password" Outlined="true"></MatTextField>
                <ValidationMessage For="@(() => frontendRegister.User.Password)" style="font-size:12px;" />
            </p>
            <p>
                <MatTextField Style="width: 100%;" @bind-Value="@frontendRegister.User.ConfirmPassword" Label="Potwierdź hasło" Type="password" Outlined="true"></MatTextField>
                <ValidationMessage For="@(() => frontendRegister.User.ConfirmPassword)" style="font-size:12px;" />
            </p>
            <p class="checkBox">
                <MatCheckbox @bind-Value="@frontendRegister.AgreementToProcessingData" Label="Zgoda na przetwarzanie danych osobowych"></MatCheckbox>
                <ValidationMessage For="@(() => frontendRegister.AgreementToProcessingData)" style="font-size:12px;" />
            </p>
        </div>
    </div>
    <MatButton Type="submit" Style="height: 80px; font-size: var(--font-size-large);" Raised="true">Zarejestruj</MatButton>
</EditForm>

@code {
    public class FrontendRegister
    {
        [Required]
        [ValidateComplexType]
        public RegisterStudentDto User { get; set; }

        [CustomValidation(typeof(FrontendRegister), nameof(rodoChecked))]
        public bool AgreementToProcessingData { get; set; } = false;

        public FrontendRegister()
        {
            User = new RegisterStudentDto()
                {
                    Name = "",
                    Surname = "",
                    Email = "",
                    Login = "",
                    Password = "",
                    ConfirmPassword = ""
                };
        }

        public static ValidationResult rodoChecked(bool checked1, ValidationContext vc)
        {
            return checked1
                ? ValidationResult.Success
                : new ValidationResult("Zaznacz zgodę", new[] { vc.MemberName });
        }
    }

    public FrontendRegister frontendRegister { get; set; } = new FrontendRegister();

    public async void TryRegister()
    {
        await AuthService.Register(frontendRegister.User);
        toast.Add("Konto utowrzone pomyślnie", MatToastType.Success, "Sukces!");
    }
}
