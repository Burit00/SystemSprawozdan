@inject NavigationManager Navigation

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateTask;

        if (authState?.User?.Identity is null || !authState.User.Identity.IsAuthenticated)
        {
            var returnUrl = Navigation.GetUriWithQueryParameter("returnUrl", true);
            
            
            if(string.IsNullOrWhiteSpace(returnUrl))
                Navigation.NavigateTo("/login", true);
            else
            {
                var returnUrlParam = new HttpParameter("returnUrl", returnUrl);
                Navigation.NavigateTo(returnUrlParam.AddToUrl("/login"));
            }
        }
    }
}